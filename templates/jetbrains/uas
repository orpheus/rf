//  -----------------------------------------------
//  USE ASYNC STATE
//  ~~
//  COPY BELOW
//  -----------------------------------------------
import { useEffect } from 'react'
import { useDispatch } from 'react-redux'
import { useTranslation } from 'react-i18next'
import { setSnackbar } from 'Modules/Snackbar'
import { clearAsync } from 'Modules/StateManager/actions'

export const asyncCalls = {
  $CALL$: '$CALL$'
}

export default function useAsyncState (asyncStates) {
  const dispatch = useDispatch()
  const { t } = useTranslation()

  const {
    $CALL$
  } = asyncStates

  useEffect(() => {
    const successMessage = '$SUCCESS$'
    const errorMessage = '$ERROR$'

    if ($CALL$?.success) {
      dispatch(setSnackbar({ variant: 'success', message: t(successMessage) }))
      dispatch(clearAsync(asyncCalls.$CALL$))
    }
    if ($CALL$?.error) {
      dispatch(setSnackbar(t(errorMessage)))
      dispatch(clearAsync(asyncCalls.$CALL$))
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [$CALL$])
}
