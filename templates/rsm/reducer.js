// auto-generated by a js-code-template-generator

import { CLEAR_ASYNC, SET_ERROR, SET_PENDING, SET_SUCCESS } from './types'
import { createAsyncState, PENDING, SUCCESS, ERROR } from './helpers'

const initialState = {}

function setPending (state, { callData }) {
  return {
    ...state,
    ...callData,
    [callData.id]: createAsyncState(PENDING)
  }
}

function setSuccess (state, { callData }) {
  return {
    ...state,
    ...callData,
    [callData.id]: createAsyncState(SUCCESS)
  }
}

function setError (state, { callData, err }) {
  return {
    ...state,
    ...callData,
    [callData.id]: createAsyncState(ERROR, err)
  }
}

function clearAsync (state, { callData }) {
  const { id } = callData
  if (!id) return initialState
  const { [id]: _, ...restOfState } = state
  return restOfState
}

const reducer = {
  [SET_PENDING]: setPending,
  [SET_SUCCESS]: setSuccess,
  [SET_ERROR]: setError,
  [CLEAR_ASYNC]: clearAsync
}
export default (state = initialState, action = {}) =>
  reducer[action.type] ? reducer[action.type](state, action) : state
